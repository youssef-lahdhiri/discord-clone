generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  relationMode="prisma"
}
model Profil{
  id String @id @default(uuid())
  userId String @unique
  name String
  imageUrl String @db.Text
  email String @db.Text

  servers Server[]
  members Member[]
  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Server{
  id String @id @default(uuid())
  serverName String
  imageUrl String
  inviteCode String @db.Text

members Member[]
channels Channel[]

  profilId String 
  profil Profil @relation(fields: [profilId], references:[id], onDelete:Cascade)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profilId])
}

enum MemberRole{
  ADMIN
  MEMBER
  GUEST
}
enum ChannelType{
  TEXT
  AUDIO
  VEDIO

}
model Member{
  id String @id @default(uuid())
  role MemberRole @default(GUEST)

  profilId String
  profil Profil @relation(fields:[profilId], references: [id],onDelete:Cascade)

serverId String
server Server @relation(fields: [serverId],references: [id],onDelete: Cascade)


createdAt DateTime @default(now())
updatedAt DateTime @updatedAt

  @@index([profilId])
}


model Channel{
  id String @id @default(uuid())
  name String
  type ChannelType @default(TEXT)

  profilId String
  profil Profil @relation(fields:[profilId], references:[id], onDelete:Cascade)
  serverId String
  server Server @relation(fields:[serverId],references:[id],onDelete:Cascade)
  
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt

  @@index([profilId])
  @@index([serverId])
}